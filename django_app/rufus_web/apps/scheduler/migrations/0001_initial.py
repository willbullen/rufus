# Generated by Django 4.2.7 on 2025-10-12 22:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_celery_beat', '0018_improve_crontab_helptext'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduledTaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for this task template', max_length=200, unique=True)),
                ('task_type', models.CharField(choices=[('email', 'Send Email'), ('report', 'Generate Report'), ('cleanup', 'Data Cleanup'), ('backup', 'Database Backup'), ('api_call', 'API Call'), ('custom', 'Custom Task')], default='custom', max_length=50)),
                ('celery_task', models.CharField(help_text='Celery task path (e.g., apps.scheduler.tasks.send_email)', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of what this task does')),
                ('default_args', models.JSONField(blank=True, default=dict, help_text='Default arguments for the task')),
                ('default_kwargs', models.JSONField(blank=True, default=dict, help_text='Default keyword arguments for the task')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Task Template',
                'verbose_name_plural': 'Task Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human-readable name for this task', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('next_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_run_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('periodic_task', models.OneToOneField(help_text='Link to Celery Beat periodic task', on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_task_info', to='django_celery_beat.periodictask')),
                ('template', models.ForeignKey(blank=True, help_text='Optional template to base this task on', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_tasks', to='scheduler.scheduledtasktemplate')),
            ],
            options={
                'verbose_name': 'Scheduled Task',
                'verbose_name_plural': 'Scheduled Tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('success', 'On Success'), ('failure', 'On Failure'), ('retry', 'On Retry'), ('all', 'All Events')], max_length=20)),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('webhook', 'Webhook'), ('slack', 'Slack'), ('discord', 'Discord')], max_length=20)),
                ('recipient', models.CharField(help_text='Email address, webhook URL, etc.', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='scheduler.scheduledtask')),
            ],
            options={
                'verbose_name': 'Task Notification',
                'verbose_name_plural': 'Task Notifications',
                'unique_together': {('scheduled_task', 'event_type', 'notification_method', 'recipient')},
            },
        ),
        migrations.CreateModel(
            name='TaskExecutionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(help_text='Celery task ID', max_length=255, unique=True)),
                ('task_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failure', 'Failure'), ('retry', 'Retry')], default='pending', max_length=20)),
                ('args', models.JSONField(blank=True, default=list)),
                ('kwargs', models.JSONField(blank=True, default=dict)),
                ('result', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('traceback', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='execution_logs', to='scheduler.scheduledtask')),
            ],
            options={
                'verbose_name': 'Task Execution Log',
                'verbose_name_plural': 'Task Execution Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='scheduler_t_created_4c2edf_idx'), models.Index(fields=['status'], name='scheduler_t_status_8b19c1_idx'), models.Index(fields=['task_id'], name='scheduler_t_task_id_c94a3c_idx')],
            },
        ),
    ]
